services:
  zoo1:
    image: zookeeper
    container_name: zoo1
    restart: always
    hostname: zoo1
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181
    logging: 
      driver: "none"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    hostname: kafka
    depends_on:
      - zoo1
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    logging: 
      driver: "none"
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "kafka:9092"]
      interval: 20s
      timeout: 5s
      retries: 10
  
  postgres:
    image: postgres:17.4
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: localPassword
      POSTGRES_DB: logs
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  producer:
    build: ./producer
    container_name: producer
    ports:
      - "8000:8000" 
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKER: kafka:9092
    volumes:
      - ./producer:/app
      - /app/node_modules  # Prevent overwriting `node_modules`
    command: ["npx", "nodemon", "src/index.js"]
  
  consumer:
    build: ./consumer
    container_name: consumer
    ports:
      - "8001:8001"
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      KAFKA_BROKER: kafka:9092
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: localPassword
      POSTGRES_DB: logs
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      KAFKA_GROUP_ID: logs-consumer-group
      PORT: 8001
    volumes:
      - ./consumer:/app
      - /app/node_modules
    command: ["npx", "nodemon", "src/index.js"]
  
  logs-api:
    build: ./logs-api
    container_name: logs-api
    ports:
      - "8002:8002"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: localPassword
      POSTGRES_DB: logs
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      PORT: 8002
    volumes:
      - ./logs-api:/app
      - /app/node_modules
    command: ["npx", "nodemon", "src/index.js"]
  
  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile.local
    container_name: ui
    ports:
      - "80:80"
    volumes:
      - ./ui:/app
      - ./ui/nginx.local.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - logs-api
      - producer

volumes:
  postgres_data: